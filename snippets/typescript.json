{
  "aog": {
    "prefix": "aog",
    "scope": "typescript",
    "body": [
      "import * as functions from \"firebase-functions\";",
      "import { dialogflow, DialogflowConversation, } from \"actions-on-google\";",
      "const app: any = dialogflow();",
      "",
      "app.intent(\"Default Welcome Intent\", (conv: DialogflowConversation) => {",
      "\tconv.ask(`Welcome!`);",
      "});\n",
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\t$0",
      "});\n",
      "export const fulfillment = functions.https.onRequest(app);"
    ],
    "description": "Creates required AoG scaffold for Firebase Cloud Functions"
  },
  "intent": {
    "prefix": "intent",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\t$0",
      "});"
    ],
    "description": "Creates intent handler"
  },
  "intent1": {
    "prefix": "intent1",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation, { ${2:param} }: { ${2:param}: string }) => {",
      "\t$0",
      "});"
    ],
    "description": "Creates intent handler with 1 string parameter"
  },
  "card": {
    "prefix": "card",
    "scope": "typescript,javascript",
    "body": [
      "conv.ask('${6:Here is the card}')",
      "conv.ask(new BasicCard({",
      "\ttitle: ${1:title},",
      "\tsubtitle: ${2:subtitle},",
      "\ttext: ${3:text},",
      "\timage: new Image({",
      "\t\turl: ${4:url},",
      "\t\talt: ${5:alt},",
      "\t}),",
      "}));"
    ],
    "description": "Creates a basic card with an image."
  },
  "helper_permission": {
    "prefix": "hpermission",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\tconst options = {",
      "\t\tcontext: '${2:context}',",
      "\t\tpermissions: ['${3|NAME,DEVICE_PRECISE_LOCATION,DEVICE_COARSE_LOCATION|}']",
      "\t};",
      "\tconv.ask(new Permission(options));",
      "});"
    ],
    "description": "Get name, precise location or coarse location using a helper."
  },
  "helper_date": {
    "prefix": "htime",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\tconst options = {",
      "\t\tprompts: {",
      "\t\t\tinitial: '${2:When do you want to have the meeting?}',",
      "\t\t\tdate: '${3:What day would you like?}'",
      "\t\t\ttime: '${4:What time?}'",
      "\t\t},",
      "\t};",
      "\tconv.ask(new DateTime(options))",
      "});"
    ],
    "description": "Get a date and time using a helper"
  },
  "helper_place": {
    "prefix": "hplace",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\tconst options = {",
      "\t\tcontext: '${2:To find a place}'",
      "\t\tprompt: '${3:What place should I use?}'",
      "\t};",
      "\tconv.ask(new Place(options))",
      "});"
    ],
    "description": "Get a place using a helper"
  },
  "helper_confirmation": {
    "prefix": "hconfirmation",
    "scope": "typescript",
    "body": [
      "app.intent('${1:intent_name}', (conv: DialogflowConversation) => {",
      "\tconv.ask(new Confirmation('${2:Is that okay?}'))",
      "});\n",
      "app.intent('${1:intent_name}_confirmation', (conv: DialogflowConversation, params: any, confirmationGranted: any) => {",
      "\treturn conv.ask(confirmationGranted ? '${3:Yes}' : '${4:No}');",
      "});"
    ],
    "description": "Get a confirmation using a helper"
  },
  "storage": {
    "prefix": "storage",
    "scope": "typescript",
    "body": ["conv.user.storage.$0"],
    "description": "Get user storage object where you can save data between conversations."
  },
  "media-response": {
    "prefix": "media",
    "scope": "typescript",
    "body": [
      "conv.ask('${1:Here is the media you asked for!}');",
      "conv.ask(new MediaObject({",
      "\tname: ${2:name}",
      "\turl: ${3:url}",
      "\tdescription: ${4:description}",
      "\ticon: new Image({",
      "\t\turl: ${5:url}",
      "\t\talt: ${2:name}",
      "\t}),",
      "}));"
    ],
    "description": "Creates a media response"
  },
  "table": {
    "prefix": "table",
    "scope": "typescript",
    "body": [
      "conv.ask('${1:Here is the table!}')",
      "conv.ask(new Table({",
      "\tdividers: true,",
      "\tcolumns: ['${2:header 1}', '${3:header 2}'],",
      "\trows: [",
      "\t\t['${4:1st row item}', '${5:1st row item}'],",
      "\t\t['${6:2st row item}', '${7:2st row item}'],",
      "\t],",
      "}))"
    ],
    "description": "Creates a table response"
  },
  "ssml": {
    "prefix": "ssml",
    "scope": "typescript",
    "body": ["<speak>$0</speak>"],
    "description": "Returns <speak></speak>"
  },
  "ssml-sbreak": {
    "prefix": "sbreak",
    "scope": "typescript",
    "body": [
      "<break time='${1:200ms}' strength='${2|x-weak,weak,medium,strong,x-strong|}'/>"
    ],
    "description": "Returns SSML defined break with options for setting time and strength"
  },
  "ssml-say-as": {
    "prefix": "sayas",
    "scope": "typescript",
    "body": [
      "<say-as interpret-as='${1|cardinal,ordinal,characters,fraction,expletive,unit,verbatim|}'>$2</say-as>"
    ],
    "description": ""
  },
  "ssml-say-as-date": {
    "prefix": "saydate",
    "scope": "typescript",
    "body": ["<say-as interpret-as='date' format='${1:yyyymmdd}'>$2</say-as>"],
    "description": ""
  }
}
